// Generated by view binder compiler. Do not edit!
package com.tencent.qcloud.tim.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.tencent.qcloud.tim.demo.R;
import com.tencent.qcloud.tuikit.timcommon.component.MinimalistLineControllerView;
import com.tencent.qcloud.tuikit.timcommon.component.MinimalistTitleBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MinimalistActivityAboutImBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MinimalistLineControllerView aboutImLv;

  @NonNull
  public final MinimalistLineControllerView aboutImPrivacyLv;

  @NonNull
  public final MinimalistTitleBar aboutImTitleBar;

  @NonNull
  public final MinimalistLineControllerView aboutSdkVersionLv;

  @NonNull
  public final MinimalistLineControllerView aboutStatementLv;

  @NonNull
  public final MinimalistLineControllerView aboutUserAgreementLv;

  @NonNull
  public final MinimalistLineControllerView cancelAccountLv;

  @NonNull
  public final MinimalistLineControllerView selfInfomationCollectionLv;

  @NonNull
  public final MinimalistLineControllerView thirdPartSharedLv;

  private MinimalistActivityAboutImBinding(@NonNull LinearLayout rootView,
      @NonNull MinimalistLineControllerView aboutImLv,
      @NonNull MinimalistLineControllerView aboutImPrivacyLv,
      @NonNull MinimalistTitleBar aboutImTitleBar,
      @NonNull MinimalistLineControllerView aboutSdkVersionLv,
      @NonNull MinimalistLineControllerView aboutStatementLv,
      @NonNull MinimalistLineControllerView aboutUserAgreementLv,
      @NonNull MinimalistLineControllerView cancelAccountLv,
      @NonNull MinimalistLineControllerView selfInfomationCollectionLv,
      @NonNull MinimalistLineControllerView thirdPartSharedLv) {
    this.rootView = rootView;
    this.aboutImLv = aboutImLv;
    this.aboutImPrivacyLv = aboutImPrivacyLv;
    this.aboutImTitleBar = aboutImTitleBar;
    this.aboutSdkVersionLv = aboutSdkVersionLv;
    this.aboutStatementLv = aboutStatementLv;
    this.aboutUserAgreementLv = aboutUserAgreementLv;
    this.cancelAccountLv = cancelAccountLv;
    this.selfInfomationCollectionLv = selfInfomationCollectionLv;
    this.thirdPartSharedLv = thirdPartSharedLv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MinimalistActivityAboutImBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MinimalistActivityAboutImBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.minimalist_activity_about_im, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MinimalistActivityAboutImBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_im_lv;
      MinimalistLineControllerView aboutImLv = rootView.findViewById(id);
      if (aboutImLv == null) {
        break missingId;
      }

      id = R.id.about_im_privacy_lv;
      MinimalistLineControllerView aboutImPrivacyLv = rootView.findViewById(id);
      if (aboutImPrivacyLv == null) {
        break missingId;
      }

      id = R.id.about_im_title_bar;
      MinimalistTitleBar aboutImTitleBar = rootView.findViewById(id);
      if (aboutImTitleBar == null) {
        break missingId;
      }

      id = R.id.about_sdk_version_lv;
      MinimalistLineControllerView aboutSdkVersionLv = rootView.findViewById(id);
      if (aboutSdkVersionLv == null) {
        break missingId;
      }

      id = R.id.about_statement_lv;
      MinimalistLineControllerView aboutStatementLv = rootView.findViewById(id);
      if (aboutStatementLv == null) {
        break missingId;
      }

      id = R.id.about_user_agreement_lv;
      MinimalistLineControllerView aboutUserAgreementLv = rootView.findViewById(id);
      if (aboutUserAgreementLv == null) {
        break missingId;
      }

      id = R.id.cancel_account_lv;
      MinimalistLineControllerView cancelAccountLv = rootView.findViewById(id);
      if (cancelAccountLv == null) {
        break missingId;
      }

      id = R.id.self_infomation_collection_lv;
      MinimalistLineControllerView selfInfomationCollectionLv = rootView.findViewById(id);
      if (selfInfomationCollectionLv == null) {
        break missingId;
      }

      id = R.id.third_part_shared_lv;
      MinimalistLineControllerView thirdPartSharedLv = rootView.findViewById(id);
      if (thirdPartSharedLv == null) {
        break missingId;
      }

      return new MinimalistActivityAboutImBinding((LinearLayout) rootView, aboutImLv,
          aboutImPrivacyLv, aboutImTitleBar, aboutSdkVersionLv, aboutStatementLv,
          aboutUserAgreementLv, cancelAccountLv, selfInfomationCollectionLv, thirdPartSharedLv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
