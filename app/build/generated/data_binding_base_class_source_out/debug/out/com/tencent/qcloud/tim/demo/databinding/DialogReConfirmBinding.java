// Generated by view binder compiler. Do not edit!
package com.tencent.qcloud.tim.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.tencent.qcloud.tim.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogReConfirmBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llMain;

  @NonNull
  public final TextView tvCancel;

  @NonNull
  public final TextView tvConfirm;

  @NonNull
  public final TextView tvContent;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final View verticalLine;

  private DialogReConfirmBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout llMain,
      @NonNull TextView tvCancel, @NonNull TextView tvConfirm, @NonNull TextView tvContent,
      @NonNull TextView tvTitle, @NonNull View verticalLine) {
    this.rootView = rootView;
    this.llMain = llMain;
    this.tvCancel = tvCancel;
    this.tvConfirm = tvConfirm;
    this.tvContent = tvContent;
    this.tvTitle = tvTitle;
    this.verticalLine = verticalLine;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogReConfirmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogReConfirmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_re_confirm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogReConfirmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout llMain = (LinearLayout) rootView;

      id = R.id.tv_cancel;
      TextView tvCancel = rootView.findViewById(id);
      if (tvCancel == null) {
        break missingId;
      }

      id = R.id.tv_confirm;
      TextView tvConfirm = rootView.findViewById(id);
      if (tvConfirm == null) {
        break missingId;
      }

      id = R.id.tvContent;
      TextView tvContent = rootView.findViewById(id);
      if (tvContent == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = rootView.findViewById(id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.verticalLine;
      View verticalLine = rootView.findViewById(id);
      if (verticalLine == null) {
        break missingId;
      }

      return new DialogReConfirmBinding((LinearLayout) rootView, llMain, tvCancel, tvConfirm,
          tvContent, tvTitle, verticalLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
