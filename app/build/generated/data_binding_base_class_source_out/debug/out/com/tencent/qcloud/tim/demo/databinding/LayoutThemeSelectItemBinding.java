// Generated by view binder compiler. Do not edit!
package com.tencent.qcloud.tim.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.tencent.qcloud.tim.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutThemeSelectItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout itemContent;

  @NonNull
  public final FrameLayout itemFrame;

  @NonNull
  public final TextView name;

  @NonNull
  public final ImageView selectedIcon;

  private LayoutThemeSelectItemBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout itemContent, @NonNull FrameLayout itemFrame, @NonNull TextView name,
      @NonNull ImageView selectedIcon) {
    this.rootView = rootView;
    this.itemContent = itemContent;
    this.itemFrame = itemFrame;
    this.name = name;
    this.selectedIcon = selectedIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutThemeSelectItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutThemeSelectItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_theme_select_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutThemeSelectItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_content;
      RelativeLayout itemContent = rootView.findViewById(id);
      if (itemContent == null) {
        break missingId;
      }

      id = R.id.item_frame;
      FrameLayout itemFrame = rootView.findViewById(id);
      if (itemFrame == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.selected_icon;
      ImageView selectedIcon = rootView.findViewById(id);
      if (selectedIcon == null) {
        break missingId;
      }

      return new LayoutThemeSelectItemBinding((LinearLayout) rootView, itemContent, itemFrame, name,
          selectedIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
